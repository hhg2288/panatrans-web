"use strict";!function(){var a=L.Marker.prototype.onAdd;L.Marker.mergeOptions({bounceOnAdd:!1,bounceOnAddDuration:1e3,bounceOnAddHeight:-1}),L.Marker.include({_toPoint:function(a){return this._map.latLngToContainerPoint(a)},_toLatLng:function(a){return this._map.containerPointToLatLng(a)},_animate:function(a){var b=new Date,c=setInterval(function(){var d=new Date-b,e=d/a.duration;e>1&&(e=1);var f=a.delta(e);a.step(f),1===e&&(a.end(),clearInterval(c))},a.delay||10)},_move:function(a,b){var c=L.latLng(this._orig_latlng),d=this._drop_point.y,e=this._drop_point.x,f=this._point.y-d,g=this;this._animate({delay:10,duration:b||1e3,delta:a,step:function(a){g._drop_point.y=d+f*a-(g._map.project(g._map.getCenter()).y-g._orig_map_center.y),g._drop_point.x=e-(g._map.project(g._map.getCenter()).x-g._orig_map_center.x),g.setLatLng(g._toLatLng(g._drop_point))},end:function(){g.setLatLng(c)}})},_easeOutBounce:function(a){return 1/2.75>a?7.5625*a*a:2/2.75>a?7.5625*(a-=1.5/2.75)*a+.75:2.5/2.75>a?7.5625*(a-=2.25/2.75)*a+.9375:7.5625*(a-=2.625/2.75)*a+.984375},bounce:function(a,b){this._orig_map_center=this._map.project(this._map.getCenter()),this._drop_point=this._getDropPoint(b),this._move(this._easeOutBounce,a)},_getDropPoint:function(a){this._point=this._toPoint(this._orig_latlng);var b;return b=void 0===a||0>a?this._toPoint(this._map.getBounds()._northEast).y:this._point.y-a,new L.Point(this._point.x,b)},onAdd:function(b){this._map=b,this._orig_latlng=this._latlng,this.options.bounceOnAdd===!0&&(this._drop_point=this._getDropPoint(this.options.bounceOnAddHeight),this.setLatLng(this._toLatLng(this._drop_point))),a.call(this,b),this.options.bounceOnAdd===!0&&this.bounce(this.options.bounceOnAddDuration,this.options.bounceOnAddHeight)}})}();var SERVER_URL="http://api.panatrans.org",DELAY="",UNKNOWN_STOP_SEQUENCE=-1;angular.module("panatransWebApp",["ngAnimate","ngCookies","ngMessages","ngResource","ngRoute","ngTouch","ui.bootstrap","ui.sortable","angular-toArrayFilter"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl"}).when("/routes",{templateUrl:"views/routes.html",controller:"RoutesCtrl"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl"}).when("/licenses",{templateUrl:"views/licenses.html",controller:"LicensesCtrl"}).otherwise({redirectTo:"/"})}]),angular.module("panatransWebApp").controller("MainCtrl",["$scope","$compile","$http","$modal",function(a,b,c,d){if(!a.map){a.routes={},a.stops={},a.stopsArr={},a.showStopDetail=!1,a.loadingStopDetail=!1,a.stopDetail={};var e={},f=null,g=null,h={},i={"default":L.AwesomeMarkers.icon({icon:"bus",prefix:"fa",markerColor:"blue"}),orange:L.AwesomeMarkers.icon({icon:"bus",prefix:"fa",markerColor:"orange"}),orangeSpin:L.AwesomeMarkers.icon({icon:"bus",prefix:"fa",markerColor:"orange",spin:!0}),pink:L.AwesomeMarkers.icon({icon:"bus",prefix:"fa",markerColor:"pink"}),red:L.AwesomeMarkers.icon({icon:"bus",prefix:"fa",markerColor:"red"}),redSpin:L.AwesomeMarkers.icon({icon:"bus",prefix:"fa",markerColor:"red",spin:!0})};a.map=L.map("map",{center:[8.9740946,-79.5508536],zoom:13,zoomControl:!1}),L.tileLayer("http://{s}.tiles.mapbox.com/v3/merlos.li3k1pmo/{z}/{x}/{y}.png",{attribution:'&copy;<a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>,© <a href="http://mapbox.com">Mapbox</a>',maxZoom:18}).addTo(a.map),c.get(SERVER_URL+"/v1/routes?with_trips=true").success(function(b){a.routesArray=b.data,$.each(b.data,function(b,c){a.routes[c.id]=c})}),c.get(SERVER_URL+"/v1/stops/").success(function(b){console.log("Success getting stops!!!"),a.stopsArr=b.data,$.each(b.data,function(b,c){a.stops[c.id]=c;var d=L.marker([c.lat,c.lon],{icon:i["default"],draggable:!1,title:c.name});d.addTo(a.map).bindPopup(c.name),d._stopId=c.id,h[c.id]=d})});var j=function(a){console.log("stopMarkerPopupOpen"),console.log(g),null===g&&k(a)},k=function(b){console.log("popupOpen - stopMarkerClicked"),a.showStopDetail=!0,console.log(b);var d=b.popup._source._stopId;null!=d&&(a.stops[d].routes?a.$apply(function(){a.stopDetail=a.stops[d],n(d)}):(h[d].setIcon(i.orangeSpin),a.loadingStopDetail=!0,c.get(SERVER_URL+"/v1/stops/"+d+"?with_stop_sequences=true"+DELAY).success(function(b){a.loadingStopDetail=!1,console.log("Success getting stop info"),console.log(b.data),a.stopDetail=b.data,a.stops[a.stopDetail.id]=b.data,n(d)})))},l=function(){console.log("stopMarkerClosed"),null===g&&$.each(h,function(a,b){b.setIcon(i["default"])})};a.map.on("popupopen",j),a.map.on("popupclose",l),a.closeStopDetail=function(){a.showStopDetail=!1},a.isFirstStopInTrip=function(a,b){var c=!1;return $.each(b.stop_sequences,function(b,d){0===d.sequence&&d.stop_id===a.id&&(c=!0)}),c},a.isLastStopInTrip=function(a,b){var c=-1,d=-1;return $.each(b.stop_sequences,function(a,b){b.sequence>c&&(c=b.sequence,d=b.stop_id)}),d===a.id?!0:!1},a.highlightStop=function(a){console.log("highlight stop"+a.name),g=a,h[a.id].openPopup()},a.lowlightStop=function(b){console.log("loglight stop"+b.name),h[a.stopDetail.id].openPopup(),g=null};var m=function(a,b){$.each(a.trips,function(a,c){$.each(c.stop_sequences,function(a,c){h[c.stop_id].setIcon(b)})})},n=function(b){$.each(a.stopDetail.routes,function(a,b){m(b,i.orange)}),h[b].setIcon(i.red)};a.highlightRoute=function(a){console.log("highlight route "+a.name),m(a,i.red)},a.lowlightRoute=function(b){m(b,i.orange),h[a.stopDetail.id].setIcon(i.red)},a.hoverIn=function(){this.hoverEdit=!0},a.hoverOut=function(){this.hoverEdit=!1},a.toggleTripDetails=function(){console.log("toggle"),this.showTripDetails=this.showTripDetails===!1||void 0===this.showTripDetails?!0:!1,console.log("showTripDetails: "+this.showTripDetails)},a.openEditStopRoutesModal=function(b){var c=d.open({templateUrl:"views/modals/edit-stop-routes.html",size:"lg",controller:"EditStopRoutesModalInstanceCtrl",backdrop:!0,stopId:b,resolve:{routes:function(){return a.routesArray},stop:function(){return a.stopDetail}}});c.result.then(function(){},function(){})},a.openEditRouteStopsModal=function(b){var c={templateUrl:"views/modals/edit-route-stops.html",size:"lg",controller:"EditRouteStopModalInstanceCtrl",backdrop:!0,routeId:b,resolve:{route:function(){return a.routes[b]},stopsArr:function(){return a.stopsArr}}};d.open(c)},a.openNewRouteModal=function(){var a={templateUrl:"views/modals/new-route.html",controller:"NewRouteModalInstanceCtrl",backdrop:"static",resolve:{}};d.open(a)},a.saveNewStop=function(){console.log("saveSaveNewStop"),console.log(e),c.post(SERVER_URL+"/v1/stops/",{stop:e}).success(function(b){console.log("stop saved successfully"),console.log(b.data),a.stops[b.data.id]=b.data,a.stopDetail=b.data,f._stopId=b.data.id,f.closePopup(),f.setIcon(i["default"]),f.bindPopup(b.data.name),h[b.data.id]=f,e={},f=null,console.log("Se ha añadido la parada con éxito")}).error(function(a){alert(a)})},a.cancelSaveNewStop=function(){console.log("cancelSaveStop")},a.openNewStopModal=function(){var c={templateUrl:"views/modals/new-stop.html",controller:"NewStopModalInstanceCtrl",backdrop:"static",resolve:{}},g=d.open(c);g.result.then(function(c){e=c;var d=a.map.getCenter();e.lat=d.lat,e.lon=d.lng,f=L.marker(d,{icon:i.redSpin,draggable:!0,bounceOnAdd:!0,bounceOnAddOptions:{duration:500,height:100},bounceOnAddCallback:function(){console.log("done")}}).addTo(a.map);var g="<div><h4>"+e.name+'</h4><p><strong>Arrástrame</strong> hasta mi localización.<br>Después dale a: </p><button ng-click="saveNewStop()"class="btn btn-primary">Guardar</button> o <a ng-click="cancelSaveNewStop()">cancelar</a></div>',h=b(angular.element(g)),j=a.$new(),k=h(j);console.log(k),f.bindPopup(k[0]).openPopup(),f.on("dragend",function(b){console.log("dragend called!!");var c=b.target;c.openPopup();var d=c.getLatLng();e.lat=d.lat,e.lon=d.lng,console.log(a.newStop)})},function(){})}}}]),angular.module("panatransWebApp").controller("AboutCtrl",["$scope",function(a){a.title="Acerca de"}]),angular.module("panatransWebApp").controller("LicensesCtrl",["$scope",function(a){a.title="Licenses"}]);var SERVER_URL="http://localhost:3000";angular.module("panatransWebApp").controller("RoutesCtrl",["$scope","$http",function(a,b){a.routes={},b.get(SERVER_URL+"/v1/routes/with_trips").success(function(b){a.routesArray=b.data,$.each(b.data,function(b,c){a.routes[c.id]=c})})}]),angular.module("panatransWebApp").controller("EditRouteStopModalInstanceCtrl",["$scope","$http","$modalInstance","route","stopsArr",function(a,b,c,d,e){a.sortedStopSequences={},a.unknownStopSequences={};var f=function(){b.get(SERVER_URL+"/v1/routes/"+a.route.id+"?"+DELAY).success(function(b){a.route=b.data,a.loading=!1,$.each(a.route.trips,function(b,c){a.sortedStopSequences[c.id]=[],a.unknownStopSequences[c.id]=[],$.each(c.stop_sequences,function(b,d){null!==d.sequence?a.sortedStopSequences[c.id].push(d):a.unknownStopSequences[c.id].push(d)})})}).error(function(a){console.log("WTF! Something wrong with the route!"),console.log(a)})};a.loading=!0,a.route=d,a.stopsArr=e,a.newStopSequence={},a.dragControlListeners={},$.each(d.trips,function(c,d){a.newStopSequence[d.id]={stop:null,trip:d,sequence:UNKNOWN_STOP_SEQUENCE},a.dragControlListeners[d.id]={},$.each(["sorted","unknown"],function(c,e){console.log(e+" -------"+d.id),a.dragControlListeners[d.id][e]={accept:function(){return!0},itemMoved:function(a){console.log("source sort"+e),console.log("source trip.id"+d.id),console.log("itemMoved"),console.log(a),console.log("nueva posición: "+a.dest.index),console.log("dest trip:"+a.dest.sortableScope.$parent.trip.id),console.log("src seq:"+a.source.itemScope.modelValue.sequence),console.log("dest sortStatus"+a.dest.sortableScope.options.containment.indexOf("unknown"));var c,g=a.dest.sortableScope.$parent.trip,h=a.source.itemScope.modelValue;g.id===d.id?null===h.sequence?(h.sequence=a.dest.index,c={stop_sequence:{sequence:a.dest.index}}):(h.sequence=null,c={stop_sequence:{unknown_sequence:!0}}):0===a.dest.sortableScope.options.containment.indexOf("unknown")?(h.sequence=null,c={stop_sequence:{unknown_sequence:!0,trip_id:g.id}}):(h.trip=g,h.sequence=a.dest.index,c={stop_sequence:{sequence:a.dest.index,trip_id:g.id}}),console.log("putData"),console.log(h),b.put(SERVER_URL+"/v1/stop_sequences/"+h.id,c).success(function(){f()})},orderChanged:function(a){if(console.log("orderChanged "),console.log("nueva posición: "+a.dest.index),console.log(a),0!==a.dest.sortableScope.options.containment.indexOf("unknown")){var c=a.dest.index,d=a.source.itemScope.modelValue;console.log("nueva posición: "+a.dest.index);var e={stop_sequence:{sequence:c}};b.put(SERVER_URL+"/v1/stop_sequences/"+d.id,e).success(function(){console.log("updated stop sequence!"),f()})}},containment:e+"_"+d.id}})}),console.log(a.dragControlListeners),d.trips[0].stops?a.loading=!1:f(),a.deleteStopSequence=function(a){b["delete"](SERVER_URL+"/v1/stop_sequences/"+a.id).success(function(){console.log("removed stop sequence success!"),f()})},a.addStopToTrip=function(c){var d=!1;console.log("stopSequence:"+a.newStopSequence[c].sequence),a.newStopSequence[c].sequence===UNKNOWN_STOP_SEQUENCE&&(d=!0);var e={stop_sequence:{sequence:a.newStopSequence[c].sequence,unknown_sequence:d,stop_id:a.newStopSequence[c].stop.id,trip_id:c}};console.log("addStopToTrip postData:"),console.log(e),b.post(SERVER_URL+"/v1/stop_sequences/",e).success(function(){f()})},a.close=function(){c.close()}}]),angular.module("panatransWebApp").controller("EditStopRoutesModalInstanceCtrl",["$scope","$http","$modalInstance","routes","stop",function(a,b,c,d,e){a.stop=e,a.routes=d,console.log(d),a.tripNotAlready=function(b){var c=!0;return $.each(a.stop.routes,function(a,d){$.each(d.trips,function(a,d){d.id===b.id&&(c=!1)})}),c},a.searchFilter=function(b){var c=new RegExp(a.searchText,"i");return!a.searchText||c.test(b.name)},a.addTrip=function(c){console.log("addTrip: "+c),b.post(SERVER_URL+"/v1/stop_sequences/",{stop_sequence:{unknown_sequence:!0,stop_id:a.stop.id,trip_id:c}}).success(function(b){console.log("added trip to stop"),console.log(b);var c=b.data.trip,d=!1;if($.each(a.stop.routes,function(b,e){e.id===c.route.id&&(d=!0,a.stop.routes[b].trips.push(c))}),!d){var e=c.route;e.trips=[c],a.stop.routes.push(e)}}).error(function(a){console.log("error adding trip to stop"),console.log(a)})},a.deleteTrip=function(c){b["delete"](SERVER_URL+"/v1/stop_sequences/trip/"+c+"/stop/"+a.stop.id).success(function(b){console.log(b),console.log("awesome! Trip and stop unlinked"),$.each(a.stop.routes,function(b,d){$.each(d.trips,function(d,e){e.id===c&&a.stop.routes[b].trips.splice(d,1)})})}).error(function(a){console.log("error removing trip from stop"),console.log(a)})},a.close=function(){c.close()}}]),angular.module("panatransWebApp").controller("NewRouteModalInstanceCtrl",["$scope","$modalInstance",function(a,b){a.ok=function(){b.close(a.selected.item)},a.cancel=function(){b.dismiss("cancel")}}]),angular.module("panatransWebApp").controller("NewStopModalInstanceCtrl",["$scope","$modalInstance",function(a,b){a.stop={},a.ok=function(){b.close(a.stop)},a.cancel=function(){b.dismiss("cancel")}}]);